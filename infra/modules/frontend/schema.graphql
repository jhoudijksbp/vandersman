scalar AWSDate
scalar AWSDateTime

type Query {
  getItem(id: ID!): Item
  listItems(from: AWSDateTime!, to: AWSDateTime!): [Item]
  listItemsByKlant(klant_id: ID!): [Item]
}

type Mutation {
  addItem(input: NewItemInput!): Item
  updateItem(input: UpdateItemInput!): Item
  triggerGetCognitoJob: TriggerJobResult
  triggerRomsplompDataJob: TriggerJobResult
  generateRompslompInvoice(ids: [WerkbonIdDatumInput!]!): TriggerJobResult
}

type Item {
  id: ID!
  klant_id: ID
  klant_naam: String
  medewerker: String!
  datum: AWSDateTime!
  datumOpdracht: AWSDate!
  dummy: String!
  products: [Product!]!
  services: [Service!]!
}

type Product {
  id: ID
  name: String!
  price: Float!
  description: String
  quantity: Int!
}

type Service {
  name: String!
  hours: Float!
  description: String
}

input NewItemInput {
  id: ID!
  klant_id: ID
  klant_naam: String
  medewerker: String!
  datum: AWSDateTime!
  datumOpdracht: AWSDate!
  dummy: String!
  products: [ProductInput!]!
  services: [ServiceInput!]!
}

input UpdateItemInput {
  id: ID!
  klant_id: ID
  klant_naam: String
  medewerker: String!
  datum: AWSDateTime!
  datumOpdracht: AWSDate!
  dummy: String!
  products: [ProductInput!]!
  services: [ServiceInput!]!
}

input ProductInput {
  id: ID
  name: String!
  price: Float!
  description: String
  quantity: Int!
}

input ServiceInput {
  name: String!
  hours: Float!
  description: String
}

type TriggerJobResult {
  status: String!
  message: String
}

input WerkbonIdDatumInput {
  id: ID!
  datum: AWSDateTime!
}
