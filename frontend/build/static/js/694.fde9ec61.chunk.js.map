{"version":3,"file":"static/js/694.fde9ec61.chunk.js","mappings":"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","sources":["../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/auth/auth.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/endpoint.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/extensions/checksum.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/http.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/middleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/profile.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/transfer.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/protocol-http/dist-es/httpRequest.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/protocol-http/dist-es/httpResponse.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/resolveAuthOptions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/normalizeProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/pagination/createPaginator.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-base64/dist-es/constants.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-base64/dist-es/toBase64.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-stream/dist-es/blob/transforms.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-stream/dist-es/checksum/ChecksumStream.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-stream/dist-es/checksum/createChecksumStream.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/create-request.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/querystring-builder/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-hex-encoding/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/schema/TypeRegistry.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/serde/copyDocumentWithTransform.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/serde/parse-utils.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/serde/date-utils.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/serde/lazy-json.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/serde/value/NumericValue.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/noAuth.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/isIpAddress.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/isValidHostLabel.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/debug/debugId.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/debug/toDebugString.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/types/EndpointError.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/booleanEquals.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/getAttr.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/getAttrPathList.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/parseURL.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/endpointFunctions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/isSet.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/not.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/stringEquals.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/substring.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/lib/uriEncode.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTemplate.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateExpression.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/getReferenceValue.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/callFunction.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateCondition.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateConditions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperty.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperties.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointUrl.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTreeRule.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/aws.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/check-features.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/encode-features.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-config-provider/dist-es/types.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-content-length/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/url-parser/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/querystring-parser/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/setFeature.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/config.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/service-error-classification/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/service-error-classification/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/defaultRetryQuota.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/util.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/configurations.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/client.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/command.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/exceptions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/default-error-handler.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/defaults-mode.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/extensions/retry.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/object-mapping.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/serde-json.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/is-array-buffer/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/headerUtil.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/utilDate.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/SignatureV4Base.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/signature-v4/dist-es/signature-v4a-container.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-body-length-browser/dist-es/calculateBodyLength.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/cache/EndpointCache.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/property-provider/dist-es/ProviderError.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/property-provider/dist-es/chain.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-defaults-mode-browser/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/property-provider/dist-es/memoize.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/invalid-dependency/dist-es/invalidProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeExtensions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentityClient.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/models/CognitoIdentityServiceException.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/models/models_0.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/core/dist-es/submodules/protocols/collect-stream-body.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetCredentialsForIdentityCommand.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdCommand.js"],"sourcesContent":["export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var HttpApiKeyAuthLocation;\n(function (HttpApiKeyAuthLocation) {\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\n})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","export var AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId || (AlgorithmId = {}));\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        addChecksumAlgorithm(algo) {\n            checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n","export const SMITHY_CONTEXT_KEY = \"__smithy_context\";\n","export var IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n","export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) || options.runtime !== \"node\") {\n        return next(args);\n    }\n    const traceIdHeader = Object.keys(request.headers ?? {}).find((h) => h.toLowerCase() === TRACE_ID_HEADER_NAME.toLowerCase()) ??\n        TRACE_ID_HEADER_NAME;\n    if (request.headers.hasOwnProperty(traceIdHeader)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","import { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { resolveAuthOptions } from \"./resolveAuthOptions\";\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemePreference = config.authSchemePreference ? await config.authSchemePreference() : [];\n    const resolvedOptions = resolveAuthOptions(options, authSchemePreference);\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of resolvedOptions) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n","export const resolveAuthOptions = (candidateAuthOptions, authSchemePreference) => {\n    if (!authSchemePreference || authSchemePreference.length === 0) {\n        return candidateAuthOptions;\n    }\n    const preferredAuthOptions = [];\n    for (const preferredSchemeName of authSchemePreference) {\n        for (const candidateAuthOption of candidateAuthOptions) {\n            const candidateAuthSchemeName = candidateAuthOption.schemeId.split(\"#\")[1];\n            if (candidateAuthSchemeName === preferredSchemeName) {\n                preferredAuthOptions.push(candidateAuthOption);\n            }\n        }\n    }\n    for (const candidateAuthOption of candidateAuthOptions) {\n        if (!preferredAuthOptions.find(({ schemeId }) => schemeId === candidateAuthOption.schemeId)) {\n            preferredAuthOptions.push(candidateAuthOption);\n        }\n    }\n    return preferredAuthOptions;\n};\n","import { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\nexport const getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\n    },\n});\n","import { HttpResponse } from \"@smithy/protocol-http\";\nexport const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            try {\n                error.message += \"\\n  \" + hint;\n            }\n            catch (e) {\n                if (!context.logger || context.logger?.constructor?.name === \"NoOpLogger\") {\n                    console.warn(hint);\n                }\n                else {\n                    context.logger?.warn?.(hint);\n                }\n            }\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n            try {\n                if (HttpResponse.isInstance(response)) {\n                    const { headers = {} } = response;\n                    const headerEntries = Object.entries(headers);\n                    error.$metadata = {\n                        httpStatusCode: response.statusCode,\n                        requestId: findHeader(/^x-[\\w-]+-request-?id$/, headerEntries),\n                        extendedRequestId: findHeader(/^x-[\\w-]+-id-2$/, headerEntries),\n                        cfId: findHeader(/^x-[\\w-]+-cf-id$/, headerEntries),\n                    };\n                }\n            }\n            catch (e) {\n            }\n        }\n        throw error;\n    }\n};\nconst findHeader = (pattern, headers) => {\n    return (headers.find(([k]) => {\n        return k.match(pattern);\n    }) || [void 0, void 1])[1];\n};\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpointConfig = options;\n    const endpoint = context.endpointV2?.url && endpointConfig.urlParser\n        ? async () => endpointConfig.urlParser(context.endpointV2.url)\n        : endpointConfig.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getHttpAuthSchemePlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nexport const httpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, identity, signingProperties),\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\n","import { httpSigningMiddleware } from \"./httpSigningMiddleware\";\nexport const httpSigningMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"HTTP_SIGNING\"],\n    name: \"httpSigningMiddleware\",\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n};\nexport const getHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);\n    },\n});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","const makePagedClientRequest = async (CommandCtor, client, input, withCommand = (_) => _, ...args) => {\n    let command = new CommandCtor(input);\n    command = withCommand(command) ?? command;\n    return await client.send(command, ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n    return async function* paginateOperation(config, input, ...additionalArguments) {\n        const _input = input;\n        let token = config.startingToken ?? _input[inputTokenName];\n        let hasNext = true;\n        let page;\n        while (hasNext) {\n            _input[inputTokenName] = token;\n            if (pageSizeTokenName) {\n                _input[pageSizeTokenName] = _input[pageSizeTokenName] ?? config.pageSize;\n            }\n            if (config.client instanceof ClientCtor) {\n                page = await makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments);\n            }\n            else {\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n            }\n            yield page;\n            const prevToken = token;\n            token = get(page, outputTokenName);\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n        }\n        return undefined;\n    };\n}\nconst get = (fromObject, path) => {\n    let cursor = fromObject;\n    const pathComponents = path.split(\".\");\n    for (const step of pathComponents) {\n        if (!cursor || typeof cursor !== \"object\") {\n            return undefined;\n        }\n        cursor = cursor[step];\n    }\n    return cursor;\n};\n","const alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\n","import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\nexport const fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { fromUtf8 } from \"@smithy/util-utf8\";\nimport { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\nexport function toBase64(_input) {\n    let input;\n    if (typeof _input === \"string\") {\n        input = fromUtf8(_input);\n    }\n    else {\n        input = _input;\n    }\n    const isArrayLike = typeof input === \"object\" && typeof input.length === \"number\";\n    const isUint8Array = typeof input === \"object\" &&\n        typeof input.byteOffset === \"number\" &&\n        typeof input.byteLength === \"number\";\n    if (!isArrayLike && !isUint8Array) {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n","export const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return new TextDecoder(\"utf-8\").decode(input);\n};\n","import { transformFromString, transformToString } from \"./transforms\";\nexport class Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return transformFromString(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n","import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}\n","const ReadableStreamRef = typeof ReadableStream === \"function\" ? ReadableStream : function () { };\nexport class ChecksumStream extends ReadableStreamRef {\n}\n","import { toBase64 } from \"@smithy/util-base64\";\nimport { isReadableStream } from \"../stream-type-check\";\nimport { ChecksumStream } from \"./ChecksumStream.browser\";\nexport const createChecksumStream = ({ expectedChecksum, checksum, source, checksumSourceLocation, base64Encoder, }) => {\n    if (!isReadableStream(source)) {\n        throw new Error(`@smithy/util-stream: unsupported source type ${source?.constructor?.name ?? source} in ChecksumStream.`);\n    }\n    const encoder = base64Encoder ?? toBase64;\n    if (typeof TransformStream !== \"function\") {\n        throw new Error(\"@smithy/util-stream: unable to instantiate ChecksumStream because API unavailable: ReadableStream/TransformStream.\");\n    }\n    const transform = new TransformStream({\n        start() { },\n        async transform(chunk, controller) {\n            checksum.update(chunk);\n            controller.enqueue(chunk);\n        },\n        async flush(controller) {\n            const digest = await checksum.digest();\n            const received = encoder(digest);\n            if (expectedChecksum !== received) {\n                const error = new Error(`Checksum mismatch: expected \"${expectedChecksum}\" but received \"${received}\"` +\n                    ` in response header \"${checksumSourceLocation}\".`);\n                controller.error(error);\n            }\n            else {\n                controller.terminate();\n            }\n        },\n    });\n    source.pipeThrough(transform);\n    const readable = transform.readable;\n    Object.setPrototypeOf(readable, ChecksumStream.prototype);\n    return readable;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","export function createRequest(url, requestOptions) {\n    return new Request(url, requestOptions);\n}\n","export function requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { buildQueryString } from \"@smithy/querystring-builder\";\nimport { createRequest } from \"./create-request\";\nimport { requestTimeout } from \"./request-timeout\";\nexport const keepAliveSupport = {\n    supported: undefined,\n};\nexport class FetchHttpHandler {\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new FetchHttpHandler(instanceOrOptions);\n    }\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n        if (keepAliveSupport.supported === undefined) {\n            keepAliveSupport.supported = Boolean(typeof Request !== \"undefined\" && \"keepalive\" in createRequest(\"https://[::1]\"));\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        const keepAlive = this.config.keepAlive === true;\n        const credentials = this.config.credentials;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        const queryString = buildQueryString(request.query || {});\n        if (queryString) {\n            path += `?${queryString}`;\n        }\n        if (request.fragment) {\n            path += `#${request.fragment}`;\n        }\n        let auth = \"\";\n        if (request.username != null || request.password != null) {\n            const username = request.username ?? \"\";\n            const password = request.password ?? \"\";\n            auth = `${username}:${password}@`;\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n            credentials,\n        };\n        if (this.config?.cache) {\n            requestOptions.cache = this.config.cache;\n        }\n        if (body) {\n            requestOptions.duplex = \"half\";\n        }\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions.signal = abortSignal;\n        }\n        if (keepAliveSupport.supported) {\n            requestOptions.keepalive = keepAlive;\n        }\n        if (typeof this.config.requestInit === \"function\") {\n            Object.assign(requestOptions, this.config.requestInit(request));\n        }\n        let removeSignalEventListener = () => { };\n        const fetchRequest = createRequest(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            reason: response.statusText,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        reason: response.statusText,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                const onAbort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    removeSignalEventListener = () => signal.removeEventListener(\"abort\", onAbort);\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }));\n        }\n        return Promise.race(raceOfPromises).finally(removeSignalEventListener);\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            config[key] = value;\n            return config;\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","import { fromBase64 } from \"@smithy/util-base64\";\nexport const streamCollector = async (stream) => {\n    if ((typeof Blob === \"function\" && stream instanceof Blob) || stream.constructor?.name === \"Blob\") {\n        if (Blob.prototype.arrayBuffer !== undefined) {\n            return new Uint8Array(await stream.arrayBuffer());\n        }\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export class TypeRegistry {\n    constructor(namespace, schemas = new Map()) {\n        this.namespace = namespace;\n        this.schemas = schemas;\n    }\n    static for(namespace) {\n        if (!TypeRegistry.registries.has(namespace)) {\n            TypeRegistry.registries.set(namespace, new TypeRegistry(namespace));\n        }\n        return TypeRegistry.registries.get(namespace);\n    }\n    register(shapeId, schema) {\n        const qualifiedName = this.normalizeShapeId(shapeId);\n        const registry = TypeRegistry.for(this.getNamespace(shapeId));\n        registry.schemas.set(qualifiedName, schema);\n    }\n    getSchema(shapeId) {\n        const id = this.normalizeShapeId(shapeId);\n        if (!this.schemas.has(id)) {\n            throw new Error(`@smithy/core/schema - schema not found for ${id}`);\n        }\n        return this.schemas.get(id);\n    }\n    getBaseException() {\n        for (const [id, schema] of this.schemas.entries()) {\n            if (id.startsWith(\"smithy.ts.sdk.synthetic.\") && id.endsWith(\"ServiceException\")) {\n                return schema;\n            }\n        }\n        return undefined;\n    }\n    find(predicate) {\n        return [...this.schemas.values()].find(predicate);\n    }\n    destroy() {\n        TypeRegistry.registries.delete(this.namespace);\n        this.schemas.clear();\n    }\n    normalizeShapeId(shapeId) {\n        if (shapeId.includes(\"#\")) {\n            return shapeId;\n        }\n        return this.namespace + \"#\" + shapeId;\n    }\n    getNamespace(shapeId) {\n        return this.normalizeShapeId(shapeId).split(\"#\")[0];\n    }\n}\nTypeRegistry.registries = new Map();\n","import { NormalizedSchema } from \"@smithy/core/schema\";\nexport const copyDocumentWithTransform = (source, schemaRef, transform = (_) => _) => {\n    const ns = NormalizedSchema.of(schemaRef);\n    switch (typeof source) {\n        case \"undefined\":\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n        case \"bigint\":\n        case \"symbol\":\n            return transform(source, ns);\n        case \"function\":\n        case \"object\":\n            if (source === null) {\n                return transform(null, ns);\n            }\n            if (Array.isArray(source)) {\n                const newArray = new Array(source.length);\n                let i = 0;\n                for (const item of source) {\n                    newArray[i++] = copyDocumentWithTransform(item, ns.getValueSchema(), transform);\n                }\n                return transform(newArray, ns);\n            }\n            if (\"byteLength\" in source) {\n                const newBytes = new Uint8Array(source.byteLength);\n                newBytes.set(source, 0);\n                return transform(newBytes, ns);\n            }\n            if (source instanceof Date) {\n                return transform(source, ns);\n            }\n            const newObject = {};\n            if (ns.isMapSchema()) {\n                for (const key of Object.keys(source)) {\n                    newObject[key] = copyDocumentWithTransform(source[key], ns.getValueSchema(), transform);\n                }\n            }\n            else if (ns.isStructSchema()) {\n                for (const [key, memberSchema] of ns.structIterator()) {\n                    newObject[key] = copyDocumentWithTransform(source[key], memberSchema, transform);\n                }\n            }\n            else if (ns.isDocumentSchema()) {\n                for (const key of Object.keys(source)) {\n                    newObject[key] = copyDocumentWithTransform(source[key], ns.getValueSchema(), transform);\n                }\n            }\n            return transform(newObject, ns);\n        default:\n            return transform(source, ns);\n    }\n};\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else if (typeof value === \"object\" && value.tag === 1) {\n        valueAsDouble = value.value;\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export const LazyJsonString = function LazyJsonString(val) {\n    const str = Object.assign(new String(val), {\n        deserializeJSON() {\n            return JSON.parse(String(val));\n        },\n        toString() {\n            return String(val);\n        },\n        toJSON() {\n            return String(val);\n        },\n    });\n    return str;\n};\nLazyJsonString.from = (object) => {\n    if (object && typeof object === \"object\" && (object instanceof LazyJsonString || \"deserializeJSON\" in object)) {\n        return object;\n    }\n    else if (typeof object === \"string\" || Object.getPrototypeOf(object) === String.prototype) {\n        return LazyJsonString(String(object));\n    }\n    return LazyJsonString(JSON.stringify(object));\n};\nLazyJsonString.fromObject = LazyJsonString.from;\n","export class NumericValue {\n    constructor(string, type) {\n        this.string = string;\n        this.type = type;\n        let dot = 0;\n        for (let i = 0; i < string.length; ++i) {\n            const char = string.charCodeAt(i);\n            if (i === 0 && char === 45) {\n                continue;\n            }\n            if (char === 46) {\n                if (dot) {\n                    throw new Error(\"@smithy/core/serde - NumericValue must contain at most one decimal point.\");\n                }\n                dot = 1;\n                continue;\n            }\n            if (char < 48 || char > 57) {\n                throw new Error(`@smithy/core/serde - NumericValue must only contain [0-9], at most one decimal point \".\", and an optional negation prefix \"-\".`);\n            }\n        }\n    }\n    toString() {\n        return this.string;\n    }\n    [Symbol.hasInstance](object) {\n        if (!object || typeof object !== \"object\") {\n            return false;\n        }\n        const _nv = object;\n        if (typeof _nv.string === \"string\" && typeof _nv.type === \"string\" && _nv.constructor?.name === \"NumericValue\") {\n            return true;\n        }\n        return false;\n    }\n}\nexport function nv(input) {\n    return new NumericValue(String(input), \"bigDecimal\");\n}\n","export class DefaultIdentityProviderConfig {\n    constructor(config) {\n        this.authSchemes = new Map();\n        for (const [key, value] of Object.entries(config)) {\n            if (value !== undefined) {\n                this.authSchemes.set(key, value);\n            }\n        }\n    }\n    getIdentityProvider(schemeId) {\n        return this.authSchemes.get(schemeId);\n    }\n}\n","export class NoAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        return httpRequest;\n    }\n}\n","export const createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\nexport const EXPIRATION_MS = 300000;\nexport const isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\nexport const doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\nexport const memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\n    if (provider === undefined) {\n        return undefined;\n    }\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async (options) => {\n        if (!pending) {\n            pending = normalizedProvider(options);\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider(options);\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider(options);\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (!requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider(options);\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","export const customEndpointFunctions = {};\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","import { EndpointURLScheme } from \"@smithy/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","import { booleanEquals, getAttr, isSet, isValidHostLabel, not, parseURL, stringEquals, substring, uriEncode, } from \"../lib\";\nexport const endpointFunctions = {\n    booleanEquals,\n    getAttr,\n    isSet,\n    isValidHostLabel,\n    not,\n    parseURL,\n    stringEquals,\n    substring,\n    uriEncode,\n};\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import { customEndpointFunctions } from \"./customEndpointFunctions\";\nimport { endpointFunctions } from \"./endpointFunctions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    const fnSegments = fn.split(\".\");\n    if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {\n        return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);\n    }\n    return endpointFunctions[fn](...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(`${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(`${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { isValidHostLabel } from \"@smithy/util-endpoints\";\nimport { isIpAddress } from \"../isIpAddress\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n","import { customEndpointFunctions } from \"@smithy/util-endpoints\";\nimport { isVirtualHostableS3Bucket } from \"./lib/aws/isVirtualHostableS3Bucket\";\nimport { parseArn } from \"./lib/aws/parseArn\";\nimport { partition } from \"./lib/aws/partition\";\nexport const awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","const ARN_DELIMITER = \":\";\nconst RESOURCE_DELIMITER = \"/\";\nexport const parseArn = (value) => {\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\")\n        return null;\n    const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId,\n    };\n};\n","export function setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n","import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n","import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { checkFeatures } from \"./check-features\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nimport { encodeFeatures } from \"./encode-features\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","const BYTE_LIMIT = 1024;\nexport function encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","export const getEndpointFromConfig = async (serviceId) => undefined;\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nimport { getEndpointFromConfig } from \"./getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./toEndpointV1\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.endpoint) {\n        let endpointFromConfig;\n        if (clientConfig.serviceConfiguredEndpoint) {\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\n        }\n        else {\n            endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);\n        }\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            case \"operationContextParams\":\n                endpointParams[name] = instruction.get(commandInput);\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { setFeature } from \"@smithy/core\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        if (config.endpoint) {\n            setFeature(context, \"ENDPOINT_OVERRIDE\", \"N\");\n        }\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n            const smithyContext = getSmithyContext(context);\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\n            if (httpAuthOption) {\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\n                    signing_region: authScheme.signingRegion,\n                    signingRegion: authScheme.signingRegion,\n                    signing_service: authScheme.signingName,\n                    signingName: authScheme.signingName,\n                    signingRegionSet: authScheme.signingRegionSet,\n                }, authScheme.properties);\n            }\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","export function setFeature(context, feature, value) {\n    if (!context.__smithy_context) {\n        context.__smithy_context = {\n            features: {},\n        };\n    }\n    else if (!context.__smithy_context.features) {\n        context.__smithy_context.features = {};\n    }\n    context.__smithy_context.features[feature] = value;\n}\n","import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\nexport const NODEJS_NETWORK_ERROR_CODES = [\"EHOSTUNREACH\", \"ENETUNREACH\", \"ENOTFOUND\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_NETWORK_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nexport const isBrowserNetworkError = (error) => {\n    const errorMessages = new Set([\n        \"Failed to fetch\",\n        \"NetworkError when attempting to fetch resource\",\n        \"The Internet connection appears to be offline\",\n        \"Load failed\",\n        \"Network request failed\",\n    ]);\n    const isValid = error && error instanceof TypeError;\n    if (!isValid) {\n        return false;\n    }\n    return errorMessages.has(error.message);\n};\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error, depth = 0) => isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    NODEJS_NETWORK_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0) ||\n    isBrowserNetworkError(error) ||\n    (error.cause !== undefined && depth <= 10 && isTransientError(error.cause, depth + 1));\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@smithy/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => DefaultRateLimiter.setTimeoutFn(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nDefaultRateLimiter.setTimeoutFn = setTimeout;\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nimport { createDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.capacity = INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","import { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"@smithy/util-retry\";\nexport const getDefaultRetryQuota = (initialRetryTokens, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = options?.noRetryIncrement ?? NO_RETRY_INCREMENT;\n    const retryCost = options?.retryCost ?? RETRY_COST;\n    const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount ?? noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\n","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@smithy/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy, retryMode: _retryMode, maxAttempts: _maxAttempts } = input;\n    const maxAttempts = normalizeProvider(_maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return Object.assign(input, {\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(_retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    });\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","const getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nexport const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.config = config;\n        this.middlewareStack = constructStack();\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\n        let handler;\n        if (useHandlerCache) {\n            if (!this.handlers) {\n                this.handlers = new WeakMap();\n            }\n            const handlers = this.handlers;\n            if (handlers.has(command.constructor)) {\n                handler = handlers.get(command.constructor);\n            }\n            else {\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n                handlers.set(command.constructor, handler);\n            }\n        }\n        else {\n            delete this.handlers;\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        }\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        this.config?.requestHandler?.destroy?.();\n        delete this.handlers;\n    }\n}\n","import { constructStack } from \"@smithy/middleware-stack\";\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [SMITHY_CONTEXT_KEY]: {\n                commandInstance: this,\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    constructor() {\n        this._init = () => { };\n        this._ep = {};\n        this._middlewareFn = () => [];\n        this._commandName = \"\";\n        this._clientName = \"\";\n        this._additionalContext = {};\n        this._smithyContext = {};\n        this._inputFilterSensitiveLog = (_) => _;\n        this._outputFilterSensitiveLog = (_) => _;\n        this._serializer = null;\n        this._deserializer = null;\n    }\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    sc(operation) {\n        this._operationSchema = operation;\n        this._smithyContext.operationSchema = operation;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.serialize = closure._serializer;\n                this.deserialize = closure._deserializer;\n                this.input = input ?? {};\n                closure._init(this);\n                this.schema = closure._operationSchema;\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n        });\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, Object.getPrototypeOf(this).constructor.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n    static isInstance(value) {\n        if (!value)\n            return false;\n        const candidate = value;\n        return (ServiceException.prototype.isPrototypeOf(candidate) ||\n            (Boolean(candidate.$fault) &&\n                Boolean(candidate.$metadata) &&\n                (candidate.$fault === \"client\" || candidate.$fault === \"server\")));\n    }\n    static [Symbol.hasInstance](instance) {\n        if (!instance)\n            return false;\n        const candidate = instance;\n        if (this === ServiceException) {\n            return ServiceException.isInstance(instance);\n        }\n        if (ServiceException.isInstance(instance)) {\n            if (candidate.name && this.name) {\n                return this.prototype.isPrototypeOf(instance) || candidate.name === this.name;\n            }\n            return this.prototype.isPrototypeOf(instance);\n        }\n        return false;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","import { getChecksumConfiguration, resolveChecksumRuntimeConfig } from \"./checksum\";\nimport { getRetryConfiguration, resolveRetryRuntimeConfig } from \"./retry\";\nexport const getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return Object.assign(getChecksumConfiguration(runtimeConfig), getRetryConfiguration(runtimeConfig));\n};\nexport const getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nexport const resolveDefaultRuntimeConfig = (config) => {\n    return Object.assign(resolveChecksumRuntimeConfig(config), resolveRetryRuntimeConfig(config));\n};\n","import { AlgorithmId } from \"@smithy/types\";\nexport { AlgorithmId };\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in AlgorithmId) {\n        const algorithmId = AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        addChecksumAlgorithm(algo) {\n            checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export const getRetryConfiguration = (runtimeConfig) => {\n    return {\n        setRetryStrategy(retryStrategy) {\n            runtimeConfig.retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return runtimeConfig.retryStrategy;\n        },\n    };\n};\nexport const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n","export const isStreamingPayload = (request) => request?.body instanceof ReadableStream;\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@smithy/service-error-classification\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@smithy/util-retry\";\nimport { v4 } from \"uuid\";\nimport { isStreamingPayload } from \"./isStreamingPayload/isStreamingPayload\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload(request)) {\n                    (context.logger instanceof NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nexport class HeaderFormatter {\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nexport class Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = HttpRequest.clone(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { escapeUri } from \"@smithy/util-uri-escape\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4Base {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest, algorithmIdentifier) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${algorithmIdentifier}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n    formatDate(now) {\n        const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n        return {\n            longDate,\n            shortDate: longDate.slice(0, 8),\n        };\n    }\n    getCanonicalHeaderList(headers) {\n        return Object.keys(headers).sort().join(\";\");\n    }\n}\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query)) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        const encodedKey = escapeUri(key);\n        keys.push(encodedKey);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[encodedKey] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .sort()\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { HeaderFormatter } from \"./HeaderFormatter\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { SignatureV4Base } from \"./SignatureV4Base\";\nexport class SignatureV4 extends SignatureV4Base {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        super({\n            applyChecksum,\n            credentials,\n            region,\n            service,\n            sha256,\n            uriEscapePath,\n        });\n        this.headerFormatter = new HeaderFormatter();\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = this.getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerFormatter.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = this.formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${this.getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest, ALGORITHM_IDENTIFIER);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = HttpRequest.clone(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\n            options.hoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","export const signatureV4aContainer = {\n    SignatureV4a: null,\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let inputCredentials = config.credentials;\n    let isUserSupplied = !!config.credentials;\n    let resolvedCredentials = undefined;\n    Object.defineProperty(config, \"credentials\", {\n        set(credentials) {\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n                isUserSupplied = true;\n            }\n            inputCredentials = credentials;\n            const memoizedProvider = normalizeCredentialProvider(config, {\n                credentials: inputCredentials,\n                credentialDefaultProvider: config.credentialDefaultProvider,\n            });\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\n            if (isUserSupplied && !boundProvider.attributed) {\n                resolvedCredentials = async (options) => boundProvider(options).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"));\n                resolvedCredentials.memoized = boundProvider.memoized;\n                resolvedCredentials.configBound = boundProvider.configBound;\n                resolvedCredentials.attributed = true;\n            }\n            else {\n                resolvedCredentials = boundProvider;\n            }\n        },\n        get() {\n            return resolvedCredentials;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n    config.credentials = inputCredentials;\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    const resolvedConfig = Object.assign(config, {\n        systemClockOffset,\n        signingEscapePath,\n        signer,\n    });\n    return resolvedConfig;\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider, }) {\n    let credentialsProvider;\n    if (credentials) {\n        if (!credentials?.memoized) {\n            credentialsProvider = memoizeIdentityProvider(credentials, isIdentityExpired, doesIdentityRequireRefresh);\n        }\n        else {\n            credentialsProvider = credentials;\n        }\n    }\n    else {\n        if (credentialDefaultProvider) {\n            credentialsProvider = normalizeProvider(credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            credentialsProvider = async () => {\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\n            };\n        }\n    }\n    credentialsProvider.memoized = true;\n    return credentialsProvider;\n}\nfunction bindCallerConfig(config, credentialsProvider) {\n    if (credentialsProvider.configBound) {\n        return credentialsProvider;\n    }\n    const fn = async (options) => credentialsProvider({ ...options, callerClientConfig: config });\n    fn.memoized = credentialsProvider.memoized;\n    fn.configBound = true;\n    return fn;\n}\n","export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultCognitoIdentityHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"cognito-identity\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultCognitoIdentityHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetCredentialsForIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"GetId\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"GetOpenIdToken\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"UnlinkIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"cognito-identity\",\n    });\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import bowser from \"bowser\";\nexport const createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => async (config) => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [\"ua\", \"2.1\"],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    const appId = await config?.userAgentAppId?.();\n    if (appId) {\n        sections.push([`app/${appId}`]);\n    }\n    return sections;\n};\nexport const defaultUserAgent = createDefaultUserAgentProvider;\n","const TEXT_ENCODER = typeof TextEncoder == \"function\" ? new TextEncoder() : null;\nexport const calculateBodyLength = (body) => {\n    if (typeof body === \"string\") {\n        if (TEXT_ENCODER) {\n            return TEXT_ENCODER.encode(body).byteLength;\n        }\n        let len = body.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const code = body.charCodeAt(i);\n            if (code > 0x7f && code <= 0x7ff)\n                len++;\n            else if (code > 0x7ff && code <= 0xffff)\n                len += 2;\n            if (code >= 0xdc00 && code <= 0xdfff)\n                i--;\n        }\n        return len;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nexport const validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n","const w = \"required\", x = \"fn\", y = \"argv\", z = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = \"stringEquals\", j = { [w]: false, \"type\": \"String\" }, k = { [w]: true, \"default\": false, \"type\": \"Boolean\" }, l = { [z]: \"Endpoint\" }, m = { [x]: c, [y]: [{ [z]: \"UseFIPS\" }, true] }, n = { [x]: c, [y]: [{ [z]: \"UseDualStack\" }, true] }, o = {}, p = { [z]: \"Region\" }, q = { [x]: h, [y]: [{ [z]: g }, \"supportsFIPS\"] }, r = { [z]: g }, s = { [x]: c, [y]: [true, { [x]: h, [y]: [r, \"supportsDualStack\"] }] }, t = [m], u = [n], v = [p];\nconst _data = { version: \"1.0\", parameters: { Region: j, UseDualStack: k, UseFIPS: k, Endpoint: j }, rules: [{ conditions: [{ [x]: b, [y]: [l] }], rules: [{ conditions: t, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: u, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: l, properties: o, headers: o }, type: e }], type: f }, { conditions: [{ [x]: b, [y]: v }], rules: [{ conditions: [{ [x]: \"aws.partition\", [y]: v, assign: g }], rules: [{ conditions: [m, n], rules: [{ conditions: [{ [x]: c, [y]: [a, q] }, s], rules: [{ conditions: [{ [x]: i, [y]: [p, \"us-east-1\"] }], endpoint: { url: \"https://cognito-identity-fips.us-east-1.amazonaws.com\", properties: o, headers: o }, type: e }, { conditions: [{ [x]: i, [y]: [p, \"us-east-2\"] }], endpoint: { url: \"https://cognito-identity-fips.us-east-2.amazonaws.com\", properties: o, headers: o }, type: e }, { conditions: [{ [x]: i, [y]: [p, \"us-west-1\"] }], endpoint: { url: \"https://cognito-identity-fips.us-west-1.amazonaws.com\", properties: o, headers: o }, type: e }, { conditions: [{ [x]: i, [y]: [p, \"us-west-2\"] }], endpoint: { url: \"https://cognito-identity-fips.us-west-2.amazonaws.com\", properties: o, headers: o }, type: e }, { endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: o, headers: o }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: t, rules: [{ conditions: [{ [x]: c, [y]: [q, a] }], rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: o, headers: o }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: u, rules: [{ conditions: [s], rules: [{ conditions: [{ [x]: i, [y]: [\"aws\", { [x]: h, [y]: [r, \"name\"] }] }], endpoint: { url: \"https://cognito-identity.{Region}.amazonaws.com\", properties: o, headers: o }, type: e }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: o, headers: o }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\", properties: o, headers: o }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","export class EndpointCache {\n    constructor({ size, params }) {\n        this.data = new Map();\n        this.parameters = [];\n        this.capacity = size ?? 50;\n        if (params) {\n            this.parameters = params;\n        }\n    }\n    get(endpointParams, resolver) {\n        const key = this.hash(endpointParams);\n        if (key === false) {\n            return resolver();\n        }\n        if (!this.data.has(key)) {\n            if (this.data.size > this.capacity + 10) {\n                const keys = this.data.keys();\n                let i = 0;\n                while (true) {\n                    const { value, done } = keys.next();\n                    this.data.delete(value);\n                    if (done || ++i > 10) {\n                        break;\n                    }\n                }\n            }\n            this.data.set(key, resolver());\n        }\n        return this.data.get(key);\n    }\n    size() {\n        return this.data.size;\n    }\n    hash(endpointParams) {\n        let buffer = \"\";\n        const { parameters } = this;\n        if (parameters.length === 0) {\n            return false;\n        }\n        for (const param of parameters) {\n            const val = String(endpointParams[param] ?? \"\");\n            if (val.includes(\"|;\")) {\n                return false;\n            }\n            buffer += val + \"|;\";\n        }\n        return buffer;\n    }\n}\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","export class ProviderError extends Error {\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.name = \"ProviderError\";\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","export const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\n","import { memoize } from \"@smithy/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultCognitoIdentityHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2014-06-30\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultCognitoIdentityHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Cognito Identity\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","export const invalidProvider = (message) => () => Promise.reject(message);\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","export const getAwsRegionExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setRegion(region) {\n            runtimeConfig.region = region;\n        },\n        region() {\n            return runtimeConfig.region;\n        },\n    };\n};\nexport const resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {\n    return {\n        region: awsRegionExtensionConfiguration.region(),\n    };\n};\n","export const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setHttpHandler(handler) {\n            runtimeConfig.httpHandler = handler;\n        },\n        httpHandler() {\n            return runtimeConfig.httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            runtimeConfig.httpHandler?.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return runtimeConfig.httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nexport const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultCognitoIdentityHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class CognitoIdentityClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultCognitoIdentityHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { normalizeProvider } from \"@smithy/core\";\nexport const DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nexport function resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    const { customUserAgent } = input;\n    return Object.assign(input, {\n        customUserAgent: typeof customUserAgent === \"string\" ? [[customUserAgent]] : customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    });\n}\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { getEndpointFromConfig } from \"./adaptors/getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint, useDualstackEndpoint, useFipsEndpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    const resolvedConfig = Object.assign(input, {\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(useFipsEndpoint ?? false),\n    });\n    let configuredEndpointPromise = undefined;\n    resolvedConfig.serviceConfiguredEndpoint = async () => {\n        if (input.serviceId && !configuredEndpointPromise) {\n            configuredEndpointPromise = getEndpointFromConfig(input.serviceId);\n        }\n        return configuredEndpointPromise;\n    };\n    return resolvedConfig;\n};\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return Object.assign(input, {\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    });\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class CognitoIdentityServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CognitoIdentityServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"./CognitoIdentityServiceException\";\nexport const AmbiguousRoleResolutionType = {\n    AUTHENTICATED_ROLE: \"AuthenticatedRole\",\n    DENY: \"Deny\",\n};\nexport class InternalErrorException extends __BaseException {\n    name = \"InternalErrorException\";\n    $fault = \"server\";\n    constructor(opts) {\n        super({\n            name: \"InternalErrorException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InternalErrorException.prototype);\n    }\n}\nexport class InvalidParameterException extends __BaseException {\n    name = \"InvalidParameterException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidParameterException.prototype);\n    }\n}\nexport class LimitExceededException extends __BaseException {\n    name = \"LimitExceededException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class NotAuthorizedException extends __BaseException {\n    name = \"NotAuthorizedException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NotAuthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NotAuthorizedException.prototype);\n    }\n}\nexport class ResourceConflictException extends __BaseException {\n    name = \"ResourceConflictException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceConflictException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    name = \"TooManyRequestsException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport const ErrorCode = {\n    ACCESS_DENIED: \"AccessDenied\",\n    INTERNAL_SERVER_ERROR: \"InternalServerError\",\n};\nexport class ResourceNotFoundException extends __BaseException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class ExternalServiceException extends __BaseException {\n    name = \"ExternalServiceException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExternalServiceException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExternalServiceException.prototype);\n    }\n}\nexport class InvalidIdentityPoolConfigurationException extends __BaseException {\n    name = \"InvalidIdentityPoolConfigurationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityPoolConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityPoolConfigurationException.prototype);\n    }\n}\nexport const MappingRuleMatchType = {\n    CONTAINS: \"Contains\",\n    EQUALS: \"Equals\",\n    NOT_EQUAL: \"NotEqual\",\n    STARTS_WITH: \"StartsWith\",\n};\nexport const RoleMappingType = {\n    RULES: \"Rules\",\n    TOKEN: \"Token\",\n};\nexport class DeveloperUserAlreadyRegisteredException extends __BaseException {\n    name = \"DeveloperUserAlreadyRegisteredException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"DeveloperUserAlreadyRegisteredException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DeveloperUserAlreadyRegisteredException.prototype);\n    }\n}\nexport class ConcurrentModificationException extends __BaseException {\n    name = \"ConcurrentModificationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ConcurrentModificationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);\n    }\n}\nexport const GetCredentialsForIdentityInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretKey && { SecretKey: SENSITIVE_STRING }),\n});\nexport const GetCredentialsForIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetIdInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Token && { Token: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenForDeveloperIdentityInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenForDeveloperIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Token && { Token: SENSITIVE_STRING }),\n});\nexport const UnlinkIdentityInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\n","import { collectBody } from \"@smithy/smithy-client\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n","import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n","import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data && typeof data === \"object\") {\n        const codeKey = findKey(data, \"code\");\n        if (codeKey && data[codeKey] !== undefined) {\n            return sanitizeErrorCode(data[codeKey]);\n        }\n        if (data[\"__type\"] !== undefined) {\n            return sanitizeErrorCode(data[\"__type\"]);\n        }\n    }\n};\n","import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException, } from \"../models/models_0\";\nexport const se_CreateIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCredentialsForIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetCredentialsForIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetIdCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetId\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetIdentityPoolRoles\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpenIdTokenCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpenIdToken\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpenIdTokenForDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetPrincipalTagAttributeMap\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListIdentityPoolsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListIdentityPools\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTagsForResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTagsForResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_LookupDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"LookupDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_MergeDeveloperIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"MergeDeveloperIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SetIdentityPoolRoles\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SetPrincipalTagAttributeMap\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlinkDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlinkDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlinkIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlinkIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_CreateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DeleteIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DeleteIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_DescribeIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_IdentityDescription(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DescribeIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetCredentialsForIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCredentialsForIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetIdCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetOpenIdTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListIdentityPoolsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_LookupDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_MergeDeveloperIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_SetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_SetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_UnlinkDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_UnlinkIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_UpdateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await de_InternalErrorExceptionRes(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await de_InvalidParameterExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await de_NotAuthorizedExceptionRes(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await de_ResourceConflictExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await de_ExternalServiceExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityPoolConfigurationException\":\n        case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n            throw await de_InvalidIdentityPoolConfigurationExceptionRes(parsedOutput, context);\n        case \"DeveloperUserAlreadyRegisteredException\":\n        case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n            throw await de_DeveloperUserAlreadyRegisteredExceptionRes(parsedOutput, context);\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ConcurrentModificationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DeveloperUserAlreadyRegisteredExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DeveloperUserAlreadyRegisteredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExternalServiceExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExternalServiceException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InternalErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityPoolConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidIdentityPoolConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_NotAuthorizedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new NotAuthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_Credentials = (output, context) => {\n    return take(output, {\n        AccessKeyId: __expectString,\n        Expiration: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        SecretKey: __expectString,\n        SessionToken: __expectString,\n    });\n};\nconst de_GetCredentialsForIdentityResponse = (output, context) => {\n    return take(output, {\n        Credentials: (_) => de_Credentials(_, context),\n        IdentityId: __expectString,\n    });\n};\nconst de_IdentitiesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_IdentityDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_IdentityDescription = (output, context) => {\n    return take(output, {\n        CreationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        IdentityId: __expectString,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Logins: _json,\n    });\n};\nconst de_ListIdentitiesResponse = (output, context) => {\n    return take(output, {\n        Identities: (_) => de_IdentitiesList(_, context),\n        IdentityPoolId: __expectString,\n        NextToken: __expectString,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `AWSCognitoIdentityService.${operation}`,\n    };\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetCredentialsForIdentityInputFilterSensitiveLog, GetCredentialsForIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetCredentialsForIdentityCommand, se_GetCredentialsForIdentityCommand } from \"../protocols/Aws_json1_1\";\nexport { $Command };\nexport class GetCredentialsForIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSCognitoIdentityService\", \"GetCredentialsForIdentity\", {})\n    .n(\"CognitoIdentityClient\", \"GetCredentialsForIdentityCommand\")\n    .f(GetCredentialsForIdentityInputFilterSensitiveLog, GetCredentialsForIdentityResponseFilterSensitiveLog)\n    .ser(se_GetCredentialsForIdentityCommand)\n    .de(de_GetCredentialsForIdentityCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetIdInputFilterSensitiveLog } from \"../models/models_0\";\nimport { de_GetIdCommand, se_GetIdCommand } from \"../protocols/Aws_json1_1\";\nexport { $Command };\nexport class GetIdCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSCognitoIdentityService\", \"GetId\", {})\n    .n(\"CognitoIdentityClient\", \"GetIdCommand\")\n    .f(GetIdInputFilterSensitiveLog, void 0)\n    .ser(se_GetIdCommand)\n    .de(de_GetIdCommand)\n    .build() {\n}\n"],"names":["HttpAuthLocation","HttpApiKeyAuthLocation","EndpointURLScheme","AlgorithmId","FieldPosition","SMITHY_CONTEXT_KEY","IniSectionType","RequestHandlerProtocol","HttpRequest","constructor","options","this","method","hostname","port","query","headers","body","protocol","slice","concat","path","charAt","username","password","fragment","clone","request","cloned","_objectSpread","Object","keys","reduce","carry","paramName","param","Array","isArray","isInstance","req","HttpResponse","statusCode","reason","response","resp","hostHeaderMiddlewareOptions","name","step","priority","tags","override","getHostHeaderPlugin","applyToStack","clientStack","add","next","async","args","handlerProtocol","requestHandler","metadata","indexOf","host","hostHeaderMiddleware","loggerMiddlewareOptions","getLoggerPlugin","context","_logger$info","clientName","commandName","logger","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","inputFilterSensitiveLog","outputFilterSensitiveLog","_response$output","output","$metadata","outputWithoutMetadata","_objectWithoutProperties","_excluded","info","call","input","error","_logger$error","TRACE_ID_HEADER_NAME","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","_Object$keys$find","_request$headers","runtime","traceIdHeader","find","h","toLowerCase","hasOwnProperty","traceId","process","nonEmptyString","str","length","recursionDetectionMiddleware","getSmithyContext","normalizeProvider","promisified","Promise","resolve","httpAuthSchemeMiddleware","config","mwOptions","resolvedOptions","resolveAuthOptions","candidateAuthOptions","authSchemePreference","preferredAuthOptions","preferredSchemeName","candidateAuthOption","schemeId","split","push","_ref","httpAuthSchemeProvider","httpAuthSchemeParametersProvider","authSchemes","httpAuthSchemes","map","Map","scheme","set","convertHttpAuthSchemesToMap","smithyContext","failureReasons","option","_option$propertiesExt","get","identityProvider","identityProviderConfigProvider","identityProperties","signingProperties","propertiesExtractor","assign","selectedHttpAuthScheme","httpAuthOption","identity","signer","Error","join","httpAuthSchemeEndpointRuleSetMiddlewareOptions","relation","toMiddleware","findHeader","pattern","k","match","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","serializer","deserializer","commandStack","deserializerMiddleware","defineProperty","value","hint","message","e","_context$logger","_context$logger2","_context$logger2$warn","warn","console","$responseBodyText","$response","headerEntries","entries","httpStatusCode","requestId","extendedRequestId","cfId","serializerMiddleware","_context$endpointV","endpointConfig","endpoint","endpointV2","url","urlParser","defaultErrorHandler","defaultSuccessHandler","httpResponse","httpSigningMiddlewareOptions","aliases","getHttpSigningPlugin","addRelativeTo","sign","catch","errorHandler","successHandler","alphabetByEncoding","alphabetByValue","i","start","charCodeAt","limit","char","String","fromCharCode","index","toString","fromBase64","totalByteLength","out","ArrayBuffer","dataView","DataView","bits","bitLength","j","TypeError","chunkOffset","byteLength","Math","floor","offset","setUint8","Uint8Array","fromUtf8","TextEncoder","encode","toBase64","_input","isArrayLike","isUint8Array","byteOffset","min","bitClusterCount","ceil","toUtf8","TextDecoder","decode","Uint8ArrayBlobAdapter","fromString","source","encoding","mutate","transformFromString","arguments","undefined","setPrototypeOf","prototype","transformToString","payload","ReadableStream","escapeUri","uri","encodeURIComponent","replace","hexEncode","c","toUpperCase","createRequest","requestOptions","Request","requestTimeout","timeoutInMs","reject","setTimeout","timeoutError","keepAliveSupport","supported","FetchHttpHandler","create","instanceOrOptions","handle","configProvider","then","opts","Boolean","destroy","_this$config","abortSignal","requestTimeoutInMs","keepAlive","credentials","aborted","abortError","queryString","parts","key","sort","iLen","qsEntry","buildQueryString","auth","_request$username","_request$password","Headers","cache","duplex","AbortController","signal","keepalive","requestInit","removeSignalEventListener","fetchRequest","raceOfPromises","fetch","fetchHeaders","transformedHeaders","pair","statusText","status","blob","onAbort","addEventListener","once","removeEventListener","onabort","race","finally","updateHttpClientConfig","httpHandlerConfigs","_this$config2","streamCollector","_stream$constructor","Blob","stream","arrayBuffer","base64","reader","FileReader","onloadend","_reader$result","readyState","result","commaIndex","dataOffset","substring","onerror","readAsDataURL","readToBase64","collectBlob","chunks","getReader","isDone","done","read","collected","chunk","collectStream","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","toHex","bytes","TypeRegistry","namespace","schemas","for","registries","has","register","shapeId","schema","qualifiedName","normalizeShapeId","getNamespace","getSchema","id","getBaseException","startsWith","endsWith","predicate","values","delete","clear","includes","expectNumber","parsed","parseFloat","Number","isNaN","stackTraceWarning","expectString","strictParseDouble","parseNumber","NUMBER_REGEX","matches","stack","filter","s","LazyJsonString","val","deserializeJSON","JSON","parse","toJSON","from","object","getPrototypeOf","stringify","fromObject","Symbol","hasInstance","DefaultIdentityProviderConfig","getIdentityProvider","NoAuthSigner","httpRequest","isIdentityExpired","expirationMs","doesIdentityRequireRefresh","expiration","getTime","Date","now","IP_V4_REGEX","RegExp","isIpAddress","test","VALID_HOST_LABEL_REGEX","isValidHostLabel","labels","label","customEndpointFunctions","debugId","toDebugString","ref","fn","argv","EndpointError","super","getAttr","pathList","part","squareBracketIndex","arrayIndex","parseInt","getAttrPathList","acc","DEFAULT_PORTS","HTTP","HTTPS","endpointFunctions","booleanEquals","value1","value2","isSet","not","parseURL","whatwgURL","URL","search","v","urlString","href","pathname","isIp","inputContainsDefaultPort","authority","normalizedPath","stringEquals","stop","reverse","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","endpointParams","referenceRecord","currentIndex","openingBraceIndex","closingBraceIndex","parameterName","refName","attrName","evaluateExpression","obj","keyName","callFunction","getReferenceValue","evaluatedArgs","arg","fnSegments","evaluateCondition","_options$logger","_options$logger$debug","fnArgs","debug","toAssign","evaluateConditions","conditions","conditionsReferenceRecord","condition","getEndpointHeaders","headerKey","headerVal","headerValEntry","processedExpr","getEndpointProperty","property","propertyEntry","getEndpointProperties","properties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","type","endpointOrUndefined","isVirtualHostableS3Bucket","selectedPartitionsInfo","selectedUserAgentPrefix","awsEndpointFunctions","parseArn","segments","arn","partition","service","region","accountId","resourcePath","resourceId","resource","flat","partitions","regions","outputs","regionData","regionRegex","DEFAULT_PARTITION","setFeature","feature","__aws_sdk_context","features","aws","ACCOUNT_ID_ENDPOINT_REGEX","USER_AGENT","X_AMZ_USER_AGENT","UA_NAME_ESCAPE_REGEX","UA_VALUE_ESCAPE_REGEX","userAgentMiddleware","_context$userAgent","_context$__smithy_con","_awsContext$__aws_sdk","_options$customUserAg","userAgent","escapeUserAgent","defaultUserAgent","defaultUserAgentProvider","retryStrategy","_retryStrategy$constr","acquireInitialRetryToken","accountIdEndpointMode","_endpointV2$url","_config$accountIdEndp","__smithy_context","$source","_credentials$$source","checkFeatures","awsContext","buffer","encodeFeatures","customUserAgent","appId","userAgentAppId","sdkUserAgentValue","normalUAValue","section","userAgentPair","_userAgentPair$","version","prefixSeparatorIndex","prefix","uaName","item","getUserAgentMiddlewareOptions","SelectorType","isFipsRegion","getRealRegion","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","getContentLengthPlugin","bodyLengthChecker","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","isDnsCompatibleBucketName","bucketName","isArnBucketName","bucket","isArn","isValidArn","createConfigValueProvider","configKey","canonicalEndpointParamKey","_config$configKey","configValue","_credentials$credenti","credentialScope","CredentialScope","_credentials$accountI","AccountId","getEndpointFromConfig","parseUrl","querystring","decodeURIComponent","parseQueryString","toEndpointV1","resolveParams","commandInput","instructionsSupplier","clientConfig","_instructionsSupplier","instructions","getEndpointParameterInstructions","instruction","serviceId","Bucket","ForcePathStyle","Endpoint","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","resolveParamsForS3","endpointMiddleware","_endpoint$properties","_context$authSchemes","endpointFromConfig","serviceConfiguredEndpoint","endpointProvider","getEndpointFromInstructions","authScheme","_smithyContext$select","signingRegion","signingName","signing_region","signing_service","signingRegionSet","endpointMiddlewareOptions","getEndpointPlugin","RETRY_MODES","DEFAULT_RETRY_MODE","STANDARD","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","NODEJS_NETWORK_ERROR_CODES","isThrottlingError","_error$$metadata2","_error$$retryable","$retryable","throttling","isTransientError","_error$$metadata3","depth","_error$$metadata","clockSkewCorrected","isClockSkewCorrectedError","code","errorMessages","Set","isBrowserNetworkError","cause","DefaultRateLimiter","_options$beta","_options$minCapacity","_options$minFillRate","_options$scaleConstan","_options$smooth","currentCapacity","enabled","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","fillRate","maxCapacity","getSendToken","acquireTokenBucket","amount","refillTokenBucket","delay","setTimeoutFn","timestamp","fillAmount","updateClientSendingRate","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","newRate","updateTokenBucketRate","getPrecise","pow","max","t","timeBucket","currentRate","num","toFixed","DEFAULT_RETRY_DELAY_BASE","MAXIMUM_RETRY_DELAY","INVOCATION_ID_HEADER","REQUEST_HEADER","createDefaultRetryToken","retryDelay","retryCount","retryCost","getRetryCount","getRetryDelay","getRetryCost","StandardRetryStrategy","maxAttempts","mode","capacity","retryBackoffStrategy","getDefaultRetryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","random","setDelayBase","maxAttemptsProvider","retryTokenScope","refreshRetryTokenForRetry","token","errorInfo","getMaxAttempts","shouldRetry","errorType","delayFromErrorType","retryAfterHint","capacityCost","getCapacityCost","recordSuccess","_token$getRetryCost","getCapacity","tokenToRenew","isRetryableError","AdaptiveRetryStrategy","ADAPTIVE","rateLimiter","standardRetryStrategy","asSdkError","getAllAliases","_aliases","alias","getMiddlewareNameWithAliases","constructStack","absoluteEntries","relativeEntries","identifyOnResolve","entriesNameSet","cloneTo","toStack","_toStack$identifyOnRe","forEach","entry","middleware","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","a","b","stepWeights","priorityWeights","wholeList","some","toOverrideIndex","findIndex","_entry$aliases","toOverride","splice","_entry$aliases2","use","plugin","remove","toRemove","isRemoved","filterCb","removeByName","removeByReference","removeByTag","_from$identifyOnResol","_from$identifyOnResol2","identify","mw","_mw$step","toggle","handler","log","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low","Client","middlewareStack","send","command","optionsOrCb","cb","callback","cacheMiddleware","handlers","WeakMap","resolveMiddleware","err","_this$config$destroy","Command","classBuilder","ClassBuilder","resolveMiddlewareWithContext","configuration","middlewareFn","additionalContext","CommandCtor","bind","handlerExecutionContext","commandInstance","_init","_ep","_middlewareFn","_commandName","_clientName","_additionalContext","_smithyContext","_inputFilterSensitiveLog","_","_outputFilterSensitiveLog","_serializer","_deserializer","init","ep","endpointParameterInstructions","m","middlewareSupplier","operation","n","f","inputFilter","outputFilter","ser","de","sc","_operationSchema","operationSchema","closure","CommandRef","_len","_ref2","_key","SENSITIVE_STRING","ServiceException","$fault","candidate","isPrototypeOf","instance","decorateServiceException","exception","additions","Message","deserializeMetadata","_ref3","_output$headers$xAmz","loadConfigsForDefaultMode","retryMode","connectionTimeout","getDefaultExtensionConfiguration","runtimeConfig","checksumAlgorithms","algorithmId","checksumConstructor","addChecksumAlgorithm","algo","getChecksumConfiguration","setRetryStrategy","getRetryConfiguration","NoOpLogger","trace","take","applyInstruction","target","targetKey","nonNullish","valueFn","pass","sourceKey","_value","defaultFilterPassed","customFilterPassed","_json","isStreamingPayload","isRetryStrategyV2","getRetryErrorInfo","getRetryErrorType","getRetryAfterHint","_error$$metadata4","isServerError","retryMiddlewareOptions","getRetryPlugin","_retryStrategy","retry","retryToken","lastError","totalRetryDelay","isRequest","v4","retryErrorInfo","refreshError","retryMiddleware","retryAfterHeaderName","retryAfter","retryAfterSeconds","toUint8Array","data","isView","BYTES_PER_ELEMENT","AMZ_DATE_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","authorization","connection","expect","pragma","referer","te","trailer","upgrade","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","KEY_TYPE_IDENTIFIER","signingKeyCache","cacheQueue","createScope","shortDate","hmac","ctor","secret","hash","update","digest","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","headerName","canonicalHeaderName","trim","getPayloadHash","hashConstructor","hashCtor","HeaderFormatter","format","formatHeaderValue","position","header","shortView","setInt16","intView","setInt32","longBytes","binView","setUint16","binBytes","utf8Bytes","strView","strBytes","tsBytes","Int64","fromNumber","valueOf","UUID_PATTERN","uuidBytes","encoded","fromHex","HEADER_VALUE_TYPE","number","remaining","abs","round","negate","negative","prepareRequest","toDate","time","SignatureV4Base","applyChecksum","sha256","uriEscapePath","regionProvider","credentialProvider","createCanonicalRequest","canonicalHeaders","payloadHash","sortedHeaders","getCanonicalPath","serialized","encodedKey","getCanonicalQuery","createStringToSign","longDate","canonicalRequest","algorithmIdentifier","hashedRequest","normalizedPathSegments","pathSegment","pop","validateResolvedCredentials","accessKeyId","secretAccessKey","formatDate","toISOString","getCanonicalHeaderList","SignatureV4","headerFormatter","presign","originalRequest","signingDate","expiresIn","unhoistableHeaders","hoistableHeaders","signingService","scope","_options$unhoistableH","_options$hoistableHea","lname","moveHeadersToQuery","sessionToken","getSignature","getSigningKey","toSign","signString","signEvent","signMessage","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","signableMessage","_ref4","signature","requestToSign","hasHeader","soughtHeader","keyPromise","sha256Constructor","credsHash","cacheKey","shift","signable","resolveAwsSdkSigV4Config","resolvedCredentials","inputCredentials","isUserSupplied","memoizedProvider","credentialsProvider","credentialDefaultProvider","memoized","memoizeIdentityProvider","provider","isExpired","requiresRefresh","normalizedProvider","resolved","pending","hasResult","isConstant","coalesceProvider","forceRefresh","parentClientConfig","normalizeCredentialProvider","boundProvider","configBound","callerClientConfig","bindCallerConfig","attributed","creds","setCredentialFeature","enumerable","configurable","signingEscapePath","systemClockOffset","regionInfoProvider","useFipsEndpoint","useDualstackEndpoint","regionInfo","params","signerConstructor","defaultSigningName","defaultCognitoIdentityHttpAuthSchemeParametersProvider","defaultCognitoIdentityHttpAuthSchemeProvider","authParameters","createAwsAuthSigv4HttpAuthOption","commonParams","UseFIPS","Region","UseDualStack","createDefaultUserAgentProvider","clientVersion","_window","_parsedUA$os","_parsedUA$os2","_parsedUA$browser$nam","_parsedUA$browser","_parsedUA$browser$ver","_parsedUA$browser2","_config$userAgentAppI","parsedUA","window","navigator","bowser","sections","os","browser","TEXT_ENCODER","calculateBodyLength","len","size","getSkewCorrectedDate","getDateHeader","_response$headers$dat","_response$headers","_response$headers2","date","getUpdatedSystemClockOffset","clockTime","currentSystemClockOffset","clockTimeInMs","isClockSkewed","throwSigningPropertyError","AwsSdkSigV4Signer","_handlerExecutionCont","_handlerExecutionCont2","validatedProps","signerFunction","validateSigningProperties","first","second","_second$signingRegion","_second$signingName","_error$ServerTime","serverTime","ServerTime","initialSystemClockOffset","dateHeader","w","x","y","z","d","g","l","o","p","q","r","u","ruleSet","parameters","resolver","_endpointParams$param","defaultEndpointResolver","resolveEndpoint","ruleSetObject","_options$logger2","_options$logger2$debu","paramsWithDefault","default","paramKey","paramDefaultValue","requiredParams","required","requiredParam","DEFAULTS_MODE_OPTIONS","isMobileBrowser","_parsedUA$platform","platform","getRuntimeConfig","_config$bodyLengthChe","_config$credentialDef","_config$defaultUserAg","_config$maxAttempts","_config$region","_config$requestHandle","_config$retryMode","_config$sha","_config$streamCollect","_config$useDualstackE","_config$useFipsEndpoi","defaultsMode","memoize","toLocaleLowerCase","resolveDefaultsModeConfig","defaultConfigProvider","clientSharedValues","_config$base64Decoder","_config$base64Encoder","_config$disableHostPr","_config$endpointProvi","_config$extensions","_config$httpAuthSchem","_config$httpAuthSchem2","_config$logger","_config$serviceId","_config$urlParser","_config$utf8Decoder","_config$utf8Encoder","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","extensions","ipc","utf8Decoder","utf8Encoder","getSharedRuntimeConfig","packageInfo","RequestHandler","Sha256","resolveRuntimeExtensions","extensionConfiguration","setRegion","getAwsRegionExtensionConfiguration","setHttpHandler","httpHandler","_runtimeConfig$httpHa","getHttpHandlerExtensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","setHttpAuthScheme","httpAuthScheme","setHttpAuthSchemeProvider","setCredentials","getHttpAuthExtensionConfiguration","extension","configure","checksumAlgorithm","resolveChecksumRuntimeConfig","retryStrategyConfiguration","resolveRetryRuntimeConfig","resolveHttpAuthRuntimeConfig","httpHandlerExtensionConfiguration","CognitoIdentityClient","__Client","_config_0","__getRuntimeConfig","_defineProperty","initConfig","_config_2","_input$userAgentAppId","normalizedAppIdProvider","isValidUserAgentAppId","_input$logger","resolveUserAgentConfig","_options$useDualstack","_options$useFipsEndpo","resolveClientEndpointParameters","_config_7","_config$authSchemePre","config_0","resolveHttpAuthSchemeConfig","_input$tls","tls","customEndpointProvider","isCustomEndpoint","resolvedConfig","configuredEndpointPromise","resolveEndpointConfig","providedRegion","resolveRegionConfig","_retryMode","_maxAttempts","resolveRetryConfig","_config_8","getHttpAuthSchemeEndpointRuleSetPlugin","CognitoIdentityServiceException","__ServiceException","InternalErrorException","__BaseException","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","TooManyRequestsException","ResourceNotFoundException","ExternalServiceException","InvalidIdentityPoolConfigurationException","DeveloperUserAlreadyRegisteredException","ConcurrentModificationException","GetCredentialsForIdentityInputFilterSensitiveLog","Logins","CredentialsFilterSensitiveLog","SecretKey","GetCredentialsForIdentityResponseFilterSensitiveLog","Credentials","GetIdInputFilterSensitiveLog","collectBodyString","streamBody","fromContext","collectBody","parseJsonBody","parseJsonErrorBody","errorBody","_value$message","se_GetCredentialsForIdentityCommand","sharedHeaders","buildHttpRpcRequest","se_GetIdCommand","de_GetCredentialsForIdentityCommand","de_CommandError","parseBody","contents","de_GetCredentialsForIdentityResponse","de_GetIdCommand","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","findKey","sanitizeErrorCode","rawValue","cleanValue","codeKey","de_InternalErrorExceptionRes","de_InvalidParameterExceptionRes","de_LimitExceededExceptionRes","de_NotAuthorizedExceptionRes","de_ResourceConflictExceptionRes","de_TooManyRequestsExceptionRes","de_ResourceNotFoundExceptionRes","de_ExternalServiceExceptionRes","de_InvalidIdentityPoolConfigurationExceptionRes","de_DeveloperUserAlreadyRegisteredExceptionRes","de_ConcurrentModificationExceptionRes","parsedBody","throwDefaultError","deserialized","__decorateServiceException","de_Credentials","AccessKeyId","__expectString","Expiration","expectNonNull","location","__expectNonNull","valueAsDouble","tag","Infinity","__parseEpochTimestamp","__expectNumber","SessionToken","IdentityId","ExceptionCtor","exceptionCtor","Code","resolvedHostname","basePath","__HttpRequest","GetCredentialsForIdentityCommand","$Command","cs","GetIdCommand"],"sourceRoot":""}